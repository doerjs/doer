import { useRef, useEffect } from 'react'
import {
  <% if (browserHistory) { %>
  createBrowserHistory,
  <% } else { %>
  createHashHistory,
  <% } %>
} from 'history'

import { getLayoutName, hasLayout } from './Layout.jsx'

import { isFunction, getRouterPath } from './helper.js'

const history = <% if (browserHistory) { %>createBrowserHistory()<% } else { %>createHashHistory()<% } %>

history.layout = function () {
  return getLayoutName()
}

history.navigate = function (to, state) {
  const paths = to.split('/').filter(Boolean)
  const prev = getRouterPath()
  const [prevLayoutName] = prev.split('/').filter(Boolean)
  if (hasLayout(prevLayoutName)) {
    history.push([prevLayoutName].concat(paths.slice(1)).join('/'), state)
    return
  }

  history.push(to, state)
}

history.redirect = function (to, state) {
  const paths = to.split('/').filter(Boolean)
  const prev = getRouterPath()
  const [prevLayoutName] = prev.split('/').filter(Boolean)
  if (hasLayout(prevLayoutName)) {
    history.replace([prevLayoutName].concat(paths.slice(1)).join('/'), state)
    return
  }

  history.replace(to, state)
}

export function useHistoryChange(handler) {
  const listener = useRef(handler)
  listener.current = handler

  useEffect(() => {
    function callback(params) {
      if (isFunction(listener.current)) {
        listener.current(params)
      }
    }

    const unListen = history.listen(callback)

    return () => {
      unListen()
    }
  }, [])
}

export default history
